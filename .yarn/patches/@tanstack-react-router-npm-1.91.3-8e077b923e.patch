diff --git a/dist/cjs/router.cjs b/dist/cjs/router.cjs
index 540b3d44e8a7163e9c6ff6063002c046e497149c..db9db4fcf5dbf81ec49f4027bb5875855f1cdb49 100644
--- a/dist/cjs/router.cjs
+++ b/dist/cjs/router.cjs
@@ -1442,7 +1442,7 @@ ${script}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<
         !this.streamedKeys.has(key),
         "Key has already been streamed: " + key
       );
-      this.streamedKeys.add(key);
+      this.emit({ type: 'onStreamedValue', key });
       this.injectScript(
         `__TSR__.streamedValues['${key}'] = { value: ${(_a = this.serializer) == null ? void 0 : _a.call(this, this.options.transformer.stringify(value))}}`
       );
@@ -1495,7 +1495,12 @@ ${script}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<
     });
     if (typeof document !== "undefined") {
       window.__TSR__ROUTER__ = this;
+      this.streamedKeys = new Set(
+        Object.keys(window.__TSR__?.streamedValues || {}),
+      );
     }
+
+    this.subscribe('onStreamedValue', ({ key }) => this.streamedKeys.add(key));
   }
   get state() {
     return this.__store.state;
diff --git a/dist/esm/router.d.ts b/dist/esm/router.d.ts
index 2c52a521d9ac164e395c128e1749448cd166f620..7b98a7ed3ea6e9aaa86100fa0a00b895d2a39b30 100644
--- a/dist/esm/router.d.ts
+++ b/dist/esm/router.d.ts
@@ -472,6 +472,10 @@ export type RouterEvents = {
         pathChanged: boolean;
         hrefChanged: boolean;
     };
+    onStreamedValue: {
+        type: 'onStreamedValue'
+        key: string
+    };
 };
 export type RouterEvent = RouterEvents[keyof RouterEvents];
 export type RouterListener<TRouterEvent extends RouterEvent> = {
diff --git a/dist/esm/router.js b/dist/esm/router.js
index 88e500ca78d521c4ab2041c7c42367dee4526b54..ca0381faa1fbd950abf2d9185420ec1a43c10dc6 100644
--- a/dist/esm/router.js
+++ b/dist/esm/router.js
@@ -1440,7 +1440,7 @@ ${script}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<
         !this.streamedKeys.has(key),
         "Key has already been streamed: " + key
       );
-      this.streamedKeys.add(key);
+      this.emit({ type: 'onStreamedValue', key })
       this.injectScript(
         `__TSR__.streamedValues['${key}'] = { value: ${(_a = this.serializer) == null ? void 0 : _a.call(this, this.options.transformer.stringify(value))}}`
       );
@@ -1493,7 +1493,11 @@ ${script}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<
     });
     if (typeof document !== "undefined") {
       window.__TSR__ROUTER__ = this;
+      this.streamedKeys = new Set(
+        Object.keys(window.__TSR__?.streamedValues || {}),
+      );
     }
+    this.subscribe('onStreamedValue', ({ key }) => this.streamedKeys.add(key))
   }
   get state() {
     return this.__store.state;
