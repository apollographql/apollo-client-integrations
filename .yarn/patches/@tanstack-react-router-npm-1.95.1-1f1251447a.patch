diff --git a/dist/cjs/router.cjs b/dist/cjs/router.cjs
index 587dace7016755dc5705bc8730c2092fee7ac79c..4b5660b0f7c51dd2cea4510e2cb25a3fe899f26c 100644
--- a/dist/cjs/router.cjs
+++ b/dist/cjs/router.cjs
@@ -1439,7 +1439,11 @@ class Router {
 ${script}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<\/script>`
       );
     };
-    this.streamedKeys = /* @__PURE__ */ new Set();
+    this.streamedKeys = /* @__PURE__ */ new Set(
+      typeof document !== "undefined" ?
+        Object.keys(window.__TSR__?.streamedValues || {})
+        : [],
+    );
     this.getStreamedValue = (key) => {
       var _a;
       if (this.isServer) {
@@ -1460,7 +1464,7 @@ ${script}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<
         !this.streamedKeys.has(key),
         "Key has already been streamed: " + key
       );
-      this.streamedKeys.add(key);
+      this.emit({ type: 'onStreamedValue', key });
       this.injectScript(
         `__TSR__.streamedValues['${key}'] = { value: ${(_a = this.serializer) == null ? void 0 : _a.call(this, this.options.transformer.stringify(value))}}`
       );
diff --git a/dist/esm/router.d.ts b/dist/esm/router.d.ts
index 66bbabfede3975c58f550400af955d8f7e8ac23b..a441ff575800f48d06392e2c328bb5cb01818a28 100644
--- a/dist/esm/router.d.ts
+++ b/dist/esm/router.d.ts
@@ -472,6 +472,10 @@ export type RouterEvents = {
         pathChanged: boolean;
         hrefChanged: boolean;
     };
+    onStreamedValue: {
+        type: 'onStreamedValue'
+        key: string
+    };
 };
 export type RouterEvent = RouterEvents[keyof RouterEvents];
 export type RouterListener<TRouterEvent extends RouterEvent> = {
diff --git a/dist/esm/router.js b/dist/esm/router.js
index 7ac37c91f28abb4933e48658ccd73d208bdb297d..80fda69676c5c8e141b126278f7e132cf578337c 100644
--- a/dist/esm/router.js
+++ b/dist/esm/router.js
@@ -1437,7 +1437,12 @@ class Router {
 ${script}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<\/script>`
       );
     };
-    this.streamedKeys = /* @__PURE__ */ new Set();
+    this.streamedKeys = new Set(
+      typeof document !== "undefined" ?
+        Object.keys(window.__TSR__?.streamedValues || {})
+        : [],
+    );
+    this.subscribe('onStreamedValue', ({ key }) => this.streamedKeys.add(key))
     this.getStreamedValue = (key) => {
       var _a;
       if (this.isServer) {
@@ -1458,7 +1463,7 @@ ${script}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<
         !this.streamedKeys.has(key),
         "Key has already been streamed: " + key
       );
-      this.streamedKeys.add(key);
+      this.emit({ type: 'onStreamedValue', key })
       this.injectScript(
         `__TSR__.streamedValues['${key}'] = { value: ${(_a = this.serializer) == null ? void 0 : _a.call(this, this.options.transformer.stringify(value))}}`
       );
