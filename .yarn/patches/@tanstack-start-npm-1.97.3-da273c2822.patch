diff --git a/dist/cjs/client/tsrScript.cjs b/dist/cjs/client/tsrScript.cjs
index 1b90ed6231c28246be7cc96ac546977d2b2d0442..f206b954ee627f53a177f974128a1e1be79473cb 100644
--- a/dist/cjs/client/tsrScript.cjs
+++ b/dist/cjs/client/tsrScript.cjs
@@ -1,4 +1,4 @@
 "use strict";
-const minifiedScript = 'const __TSR__={matches:[],streamedValues:{},queue:[],runQueue:()=>{let e=!1;__TSR__.queue=__TSR__.queue.filter(r=>r()?(e=!0,!1):!0),e&&__TSR__.runQueue()},initMatch:e=>{__TSR__.queue.push(()=>(__TSR__.matches[e.index]||(__TSR__.matches[e.index]=e,Object.entries(e.extracted).forEach(([r,t])=>{if(t.type==="stream"){let a;t.value=new ReadableStream({start(o){a=o}}),t.value.controller=a}else if(t.type==="promise"){let a,o;t.value=new Promise((l,u)=>{o=u,a=l}),t.value.reject=o,t.value.resolve=a}})),!0)),__TSR__.runQueue()},resolvePromise:e=>{__TSR__.queue.push(()=>{const r=__TSR__.matches[e.matchIndex];if(r){const t=r.extracted[e.id];if(t&&t.type==="promise"&&t.value&&e.promiseState.status==="success")return t.value.resolve(e.promiseState.data),!0}return!1}),__TSR__.runQueue()},cleanScripts:()=>{document.querySelectorAll(".tsr-once").forEach(e=>{e.remove()})}};window.__TSR__=__TSR__;\n';
+const minifiedScript = 'const __TSR__={matches:[],streamedValues:{},setStreamedValue(e,r){__TSR__.streamedValues[e]={value:r},typeof __TSR__ROUTER__<"u"&&__TSR__ROUTER__.emit({type:"onStreamedValue",key:e})},queue:[],runQueue:()=>{let e=!1;__TSR__.queue=__TSR__.queue.filter(r=>r()?(e=!0,!1):!0),e&&__TSR__.runQueue()},initMatch:e=>{__TSR__.queue.push(()=>(__TSR__.matches[e.index]||(__TSR__.matches[e.index]=e,Object.entries(e.extracted).forEach(([r,t])=>{if(t.type==="stream"){let a;t.value=new ReadableStream({start(o){a=o}}),t.value.controller=a}else if(t.type==="promise"){let a,o;t.value=new Promise((l,u)=>{o=u,a=l}),t.value.reject=o,t.value.resolve=a}})),!0)),__TSR__.runQueue()},resolvePromise:e=>{__TSR__.queue.push(()=>{const r=__TSR__.matches[e.matchIndex];if(r){const t=r.extracted[e.id];if(t&&t.type==="promise"&&t.value&&e.promiseState.status==="success")return t.value.resolve(e.promiseState.data),!0}return!1}),__TSR__.runQueue()},cleanScripts:()=>{document.querySelectorAll(".tsr-once").forEach(e=>{e.remove()})}};window.__TSR__=__TSR__;\n';
 module.exports = minifiedScript;
 //# sourceMappingURL=tsrScript.cjs.map
diff --git a/dist/esm/client/tsrScript.js b/dist/esm/client/tsrScript.js
index eb4cd1eec8da7fee74455d9e5f6c5c634ffabd87..9ace36dd92f618e1f7be2bdf5c88adcfd19872e9 100644
--- a/dist/esm/client/tsrScript.js
+++ b/dist/esm/client/tsrScript.js
@@ -1,4 +1,4 @@
-const minifiedScript = 'const __TSR__={matches:[],streamedValues:{},queue:[],runQueue:()=>{let e=!1;__TSR__.queue=__TSR__.queue.filter(r=>r()?(e=!0,!1):!0),e&&__TSR__.runQueue()},initMatch:e=>{__TSR__.queue.push(()=>(__TSR__.matches[e.index]||(__TSR__.matches[e.index]=e,Object.entries(e.extracted).forEach(([r,t])=>{if(t.type==="stream"){let a;t.value=new ReadableStream({start(o){a=o}}),t.value.controller=a}else if(t.type==="promise"){let a,o;t.value=new Promise((l,u)=>{o=u,a=l}),t.value.reject=o,t.value.resolve=a}})),!0)),__TSR__.runQueue()},resolvePromise:e=>{__TSR__.queue.push(()=>{const r=__TSR__.matches[e.matchIndex];if(r){const t=r.extracted[e.id];if(t&&t.type==="promise"&&t.value&&e.promiseState.status==="success")return t.value.resolve(e.promiseState.data),!0}return!1}),__TSR__.runQueue()},cleanScripts:()=>{document.querySelectorAll(".tsr-once").forEach(e=>{e.remove()})}};window.__TSR__=__TSR__;\n';
+const minifiedScript = 'const __TSR__={matches:[],streamedValues:{},setStreamedValue(e,r){__TSR__.streamedValues[e]={value:r},typeof __TSR__ROUTER__<"u"&&__TSR__ROUTER__.emit({type:"onStreamedValue",key:e})},queue:[],runQueue:()=>{let e=!1;__TSR__.queue=__TSR__.queue.filter(r=>r()?(e=!0,!1):!0),e&&__TSR__.runQueue()},initMatch:e=>{__TSR__.queue.push(()=>(__TSR__.matches[e.index]||(__TSR__.matches[e.index]=e,Object.entries(e.extracted).forEach(([r,t])=>{if(t.type==="stream"){let a;t.value=new ReadableStream({start(o){a=o}}),t.value.controller=a}else if(t.type==="promise"){let a,o;t.value=new Promise((l,u)=>{o=u,a=l}),t.value.reject=o,t.value.resolve=a}})),!0)),__TSR__.runQueue()},resolvePromise:e=>{__TSR__.queue.push(()=>{const r=__TSR__.matches[e.matchIndex];if(r){const t=r.extracted[e.id];if(t&&t.type==="promise"&&t.value&&e.promiseState.status==="success")return t.value.resolve(e.promiseState.data),!0}return!1}),__TSR__.runQueue()},cleanScripts:()=>{document.querySelectorAll(".tsr-once").forEach(e=>{e.remove()})}};window.__TSR__=__TSR__;\n';
 export {
   minifiedScript as default
 };
