diff --git a/dist/cjs/router.cjs b/dist/cjs/router.cjs
index ff603dc0b9e215ba6b1f348e017753df47427130..03afa6c7371bb799876ff21dbac2e8c8825f91f4 100644
--- a/dist/cjs/router.cjs
+++ b/dist/cjs/router.cjs
@@ -1443,7 +1443,11 @@ class Router {
 ${jsesc(script, { quotes: "backtick" })}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<\/script>`
       );
     };
-    this.streamedKeys = /* @__PURE__ */ new Set();
+    this.streamedKeys = /* @__PURE__ */ new Set(
+      typeof document !== "undefined" ?
+        Object.keys(window.__TSR__?.streamedValues || {})
+        : [],
+    );
     this.getStreamedValue = (key) => {
       var _a;
       if (this.isServer) {
@@ -1464,7 +1468,7 @@ ${jsesc(script, { quotes: "backtick" })}\`)` : ""}; if (typeof __TSR__ !== 'unde
         !this.streamedKeys.has(key),
         "Key has already been streamed: " + key
       );
-      this.streamedKeys.add(key);
+      this.emit({ type: 'onStreamedValue', key });
       this.injectScript(
         `__TSR__.streamedValues['${key}'] = { value: ${(_a = this.serializer) == null ? void 0 : _a.call(this, this.options.transformer.stringify(value))}}`
       );
diff --git a/dist/esm/router.d.ts b/dist/esm/router.d.ts
index 08d8c55c7bc6bde6217067a7478d1f4bcd08a3b7..755f8ea47c203756add49b3b0278ddc5bf91c020 100644
--- a/dist/esm/router.d.ts
+++ b/dist/esm/router.d.ts
@@ -472,6 +472,10 @@ export type RouterEvents = {
         pathChanged: boolean;
         hrefChanged: boolean;
     };
+    onStreamedValue: {
+        type: 'onStreamedValue'
+        key: string
+    };
 };
 export type RouterEvent = RouterEvents[keyof RouterEvents];
 export type RouterListener<TRouterEvent extends RouterEvent> = {
diff --git a/dist/esm/router.js b/dist/esm/router.js
index 54809e99911c9b82e94aa66bbda5991ab96b20e8..1c6bdac989cedf64e5c4164dc55ed639e37c3e3b 100644
--- a/dist/esm/router.js
+++ b/dist/esm/router.js
@@ -1441,7 +1441,12 @@ class Router {
 ${jsesc(script, { quotes: "backtick" })}\`)` : ""}; if (typeof __TSR__ !== 'undefined') __TSR__.cleanScripts()<\/script>`
       );
     };
-    this.streamedKeys = /* @__PURE__ */ new Set();
+    this.streamedKeys = new Set(
+      typeof document !== "undefined" ?
+        Object.keys(window.__TSR__?.streamedValues || {})
+        : [],
+    );
+    this.subscribe('onStreamedValue', ({ key }) => this.streamedKeys.add(key))
     this.getStreamedValue = (key) => {
       var _a;
       if (this.isServer) {
@@ -1462,7 +1467,7 @@ ${jsesc(script, { quotes: "backtick" })}\`)` : ""}; if (typeof __TSR__ !== 'unde
         !this.streamedKeys.has(key),
         "Key has already been streamed: " + key
       );
-      this.streamedKeys.add(key);
+      this.emit({ type: 'onStreamedValue', key })
       this.injectScript(
         `__TSR__.streamedValues['${key}'] = { value: ${(_a = this.serializer) == null ? void 0 : _a.call(this, this.options.transformer.stringify(value))}}`
       );
